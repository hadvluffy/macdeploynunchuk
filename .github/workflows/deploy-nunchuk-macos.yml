name: deploy-nunchuk-macos

on:
  push:
    tags:
    - '*'

  workflow_dispatch:

jobs:
  build:
    runs-on: macos-13

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Install AppDmg
        working-directory: ${{runner.workspace}}
        run: |
          npm install -g appdmg
          
          echo "diskutil list"
          diskutil list
          
      - name: Download build output
        working-directory: ${{runner.workspace}}
        run: |
          echo "${{ secrets.GITHUB_TOKEN }}" | gh auth login --with-token
          job_runs_id="14309372792"
          gh run download $job_runs_id -n "nunchuk-macos-built" --repo hadvluffy/macdeploynunchuk
          unzip nunchuk-macos-built.zip
          echo "ls -la"
          ls -la 
        
      - name: Create appdmg JSON configuration
        working-directory: ${{runner.workspace}}
        run: |
          cat <<EOF > dmg.json
          {
            "title": "nunchuk-macos",
            "icon-size": 100,
            "window": {
              "position": {
                "x": 200,
                "y": 150
              },
              "size": {
                "width": 800,
                "height": 400
              }
            },
            "contents": [
              {
                "x": 200,
                "y": 200,
                "type": "file",
                "path": "nunchuk-macos-x86_64/Nunchuk.app"
              },
              {
                "x": 600,
                "y": 200,
                "type": "link",
                "path": "/Applications"
              }
            ]
          }
          EOF
          ls -la
          
      - name: Create DMG
        working-directory: ${{runner.workspace}}
        run: |
          mkdir -p dist
          appdmg dmg.json dist/Nunchuk.dmg
          ls -la dist
          
          echo "diskutil list"
          diskutil list

      - name: Clean hidden folders from DMG
        working-directory: ${{runner.workspace}}
        run: |
          echo "üßº Convert to RW..."
          hdiutil convert dist/Nunchuk.dmg -format UDRW -o dist/Nunchuk_rw.dmg
      
          echo "üì¶ Mount dmg..."
          mount_output=$(hdiutil attach dist/Nunchuk_rw.dmg -mountpoint /Volumes/NunchukRW)
          device=$(echo "$mount_output" | grep "/Volumes/NunchukRW" | awk '{print $1}')
          echo "üîß Mounted at device: $device"
      
          echo "üî• Deleting hidden folders..."
          rm -rf /Volumes/NunchukRW/.background
          rm -rf /Volumes/NunchukRW/.fseventsd
          rm -rf /Volumes/NunchukRW/.Spotlight-V100
          rm -rf /Volumes/NunchukRW/.Trashes
      
          echo "üõ°Ô∏è Prevent fseventsd from regenerating"
          mkdir -p /Volumes/NunchukRW/.fseventsd
          touch /Volumes/NunchukRW/.fseventsd/no_log
      
          echo "üíæ Syncing and detaching..."
          sync
          hdiutil detach "$device"
      
          echo "üì¶ Recompress to final Nunchuk.dmg..."
          hdiutil convert dist/Nunchuk_rw.dmg -format UDZO -o dist/Nunchuk_clean.dmg
      
          echo "üßπ Replace original..."
          mv dist/Nunchuk_clean.dmg dist/Nunchuk.dmg
          rm -f dist/Nunchuk_rw.dmg
      
          echo "‚úÖ Done. Final output: dist/Nunchuk.dmg"


      - name: Zip to√†n b·ªô output dist
        working-directory: ${{runner.workspace}}
        run: |
          zip -r dist.zip dist

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: dist
          path: ${{runner.workspace}}/dist.zip
