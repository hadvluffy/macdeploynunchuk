name: deploy-nunchuk-macos

on:
  push:
    tags:
    - '*'

  workflow_dispatch:

jobs:
  build:
    runs-on: macos-13

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Eject all disk images
        run: |
          echo "diskutil list"
          diskutil list

          echo "diskutil list - with volume nunchuk-macos"
          diskutil list | grep -B 1 "nunchuk-macos" | grep -o "disk[0-9]*" | head -n 1 | sed 's/^/\/dev\//'
          for disk in $(diskutil list | grep -B 1 "nunchuk-macos" | grep -o "disk[0-9]*" | sed 's/^/\/dev\//'); do
            sudo diskutil eject $disk
            sleep 1
            if ! diskutil list | grep -q $disk; then
              echo "$disk already ejected"
            else
              echo "$disk ejected"
            fi
          done

      - name: Install AppDmg
        working-directory: ${{runner.workspace}}
        run: |
          npm install -g appdmg
          
      - name: Download build output
        working-directory: ${{runner.workspace}}
        run: |
          echo "${{ secrets.GITHUB_TOKEN }}" | gh auth login --with-token
          job_runs_id="14309372792"
          gh run download $job_runs_id -n "nunchuk-macos-built" --repo hadvluffy/macdeploynunchuk
          unzip nunchuk-macos-built.zip
          echo "ls -l"
          ls -l 

      - name: Create appdmg JSON configuration
        working-directory: ${{runner.workspace}}
        run: |
          cat <<EOF > dmg.json
          {
            "title": "nunchuk-macos",
            "icon-size": 100,
            "window": {
              "position": {
                "x": 200,
                "y": 150
              },
              "size": {
                "width": 800,
                "height": 400
              }
            },
            "contents": [
              {
                "x": 200,
                "y": 200,
                "type": "file",
                "path": "nunchuk-macos-x86_64/Nunchuk.app"
              },
              {
                "x": 600,
                "y": 200,
                "type": "link",
                "path": "/Applications"
              }
            ]
          }
          EOF
          ls -l
          
      - name: Create DMG
        working-directory: ${{runner.workspace}}
        run: |
          mkdir dist
          appdmg dmg.json Nunchuk.dmg
          rsync -a --exclude='.background' Nunchuk.dmg dist/Nunchuk.dmg
          
          ls -l dist

      - name: Zip toàn bộ output dist
        working-directory: ${{runner.workspace}}
        run: |
          zip -r dist.zip dist

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: dist
          path: ${{runner.workspace}}/dist.zip
